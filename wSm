#!/bin/bash

# Standard user fail protection
if [ "$(id -u)" != "0" ]; then
  echo "This script must be run as root" 1>&2
  exit 1
fi

# Load config
source modules/configReader.sh "config.cfg"

# Run sanityCheck
bash modules/sanityCheck.sh || exit 1

# Default vars
chrootHost=1
sslSecured=0
hostRedir=0

function _help()
{
  echo -e "Usage: $0 {add|remove|suspend|resume|userban} [-h|--help]\n"
  echo "Virtual server creation:"
  echo "  add:            Add a virtual server, and create an user"
  echo -e "\nVirtual server alteration/modification:"
  echo "  remove:         Remove an existing virtual server."
  echo "  regen:          Fully regenerate virtual server config and dirs."
  echo -e "\nSpecial:"
  echo "  userban:        Remove user and delete all his hosts."
  exit 1
}

function _helpAdd()
{
  echo -e "Usage: $0 add -s|--server <servername> -u|--user <username> [options]\n"
  echo "Options:"
  echo "  --ssl:          If specified, a Let's Encrypt certificate will be"
  echo "                  generated and will be applied to the virtual server"
  echo -e "\n  --no-chroot:    Do not chroot the virtual server, only for websites"
  echo "                  who uses external programs"
  echo -e "\n  --redir:        With this option enabled, the server will always"
  echo "                  redirect the client to the first domain entered"
  echo "                  Example: $0 add -s www.example.com -s example.com"
  echo "                  will always redirect to www.example.com"
  exit 1
}
function _helpRemove()
{
  echo -e "Usage: $0 remove -s|--server <name>\n"
  exit 1
}

function _helpUserban()
{
  echo -e "Usage: $0 kickuser -u|--user <name>\n"
  exit 1
}

function _helpRegen()
{
  echo -e "Usage: $0 regen -s|--server <name>\n"
  exit 1
}

# Parsing arguments
while [ ! -z "$1" ]
do
  case $1 in
    add)
      while [ ! -z "$1" ]
      do
        shift
        case $1 in
          -h | --help)
            _helpAdd
          ;;
          -s | --server)
            shift
            if [ ! -z "$1" ]
            then
              if [ -z "$serverName" ]
              then
                serverName=$1
                else
                  if [ -z "$serverAlias" ]
                  then
                    serverAlias=$1
                  else
                    serverAlias="${serverAlias},$1"
                  fi
                fi
              else
                echo "Error: Please specify a server name after -s|--server argument."
              exit 1
            fi
          ;;
          -u | --user)
            shift
            if [ ! -z "$1" ]
            then
              userName=$1
            else
              echo "Error: Please specify an username after -u|--user argument."
              exit 1
            fi
          ;;

          # Options
          --ssl)
            sslSecured=1
          ;;
          --no-chroot)
            chrootHost=0
          ;;
          --redir)
            hostRedir=1
        esac
      done

      # Creating host
      bash modules/hosts/addHost.sh "$serverName" "$serverAlias" "$userName" "$sslSecured" "$chrootHost" "$hostRedir"

      exit 0
    ;;
    remove)
      while [ ! -z "$1" ]
      do
        shift
        case $1 in
          -h | --help)
            _helpRemove
          ;;
          -s | --server)
            shift
            if [ ! -z "$1" ]
            then
              if [ -z "$serverName" ]
              then
                serverName=$1
              else
                echo "Error: You can only specify one server name to remove."
                exit 1
              fi
            else
              echo "Error: Please specify a server name after -s|--server argument."
              exit 1
            fi
        esac
      done

      # Remove host
      bash modules/hosts/delHost.sh "$serverName"

      exit 0
    ;;
    userban)
      while [ ! -z "$1" ]
      do
        shift
        case $1 in
          -h | --help)
            _helpUserban
          ;;
          -u | --user)
            shift
            if [ ! -z "$1" ]
            then
              userName=$1
            else
              echo "Error: Please specify an username after -u|--user argument."
              exit 1
            fi
          ;;
        esac
      done

      # Remove user and host recursively
      bash modules/users/delUser.sh "$userName"

      exit 0
    ;;
    regen)
      while [ ! -z "$1" ]
      do
        shift
        case $1 in
          -h | --help)
            _helpResume
          ;;
          -s | --server)
            shift
            if [ ! -z "$1" ]
            then
              if [ -z "$serverName" ]
              then
                serverName=$1
              else
                echo "Error: You can only specify one server name to resume."
                exit 1
              fi
            else
              echo "Error: Please specify a server name after -s|--server argument."
              exit 1
            fi
        esac
      done

      # Launch regeneration
      bash modules/hosts/regenHost.sh "$serverName"

      exit 0
    ;;
      -h | --help)
        break
  esac
  shift
done

# If loop broken call _help()
_help
